(env
 (dev
  (flags
   (:standard -warn-error -3-7-8-13-15-20-26-27-32-33-39))))

(rule
 (targets version.ml)
 (action
  (progn
   (with-stdout-to
    version2.ml
    (progn
     (run echo let version = "\"")
     (run echo "Version 1.2: ")
     (run git rev-parse --abbrev-ref HEAD)
     (run echo , " ")
     (run git rev-parse --short HEAD)
     (run echo , " ")
     (pipe-stdout
      (run git rev-parse --verify HEAD)
      (run git show --no-patch --no-notes --pretty='%cd'))
     (run echo "\"")))
   (with-stdout-to
    version.ml
    (pipe-stdout
     (run cat version2.ml)
     (run tr -d '\n'))))))

(rule
 (targets stdpath.ml)
 (action
  (progn
   (with-stdout-to
    stdpath2.ml
    (progn
     (run echo let path = "\"")
     (run opam var share)
     (run echo /Lama)
     (run echo "\"")))
   (with-stdout-to
    stdpath.ml
    (pipe-stdout
     (run cat stdpath2.ml)
     (run tr -d '\n'))))))

; (rule
;  (targets Solver.ml)
;  (deps
;   (:input Solver.noc.ml)
;   (package noCanren))
;  (action
;   (run
;    sh
;    -c
;    "noCanren -w -8 %{input} -I `ocamlfind -query OCanren` -rectypes -o %{targets}")))

(library
 (name liba)
 (modules Language Pprinter stdpath version X86 SM Typing Solver Check)
 (libraries GT ostap OCanren)
 (flags
  (:standard
   -rectypes
   ;-dsource
   ))
 ;  (ocamlopt_flags
 ;   (:standard -dsource))
 (wrapped false)
 (preprocess
  (per_module
   ((pps GT.ppx_all)
    SM
    X86)
   ((action
     (run %{project_root}/src/pp5+gt+plugins+ostap+dump.byte %{input-file}))
    Language
    Typing
    Pprinter
    stdpath
    version)
   ; ((pps
   ;   OCanren-ppx.ppx_repr
   ;   OCanren-ppx.ppx_fresh
   ;   OCanren-ppx.ppx_distrib -new-typenames
   ;   GT.ppx_all)
   ;  Solver)
   ((action
     (run %{project_root}/src/pp5+gt+plugins+ocanren+dump.byte %{input-file}))
    Check
    Solver)))
 (preprocessor_deps
  (file %{project_root}/src/pp5+gt+plugins+ostap+dump.byte)
  (file %{project_root}/src/pp5+gt+plugins+ocanren+dump.byte)
  ;(file %{project_root}/src/pp5+gt+plugins+ostap+dump.exe)
  )
 ;(inline_tests)
 )

(executable
 (name Driver)
 (flags
  (:standard
   -rectypes
   ;-dsource
   ))
 (modules Driver)
 (libraries liba unix))

; (rule
;  (targets pp5+gt+plugins+ostap+dump.exe)
;  (deps
;   (package GT))
;  (action
;   (run
;    mkcamlp5.opt
;    -package
;    camlp5,camlp5.pa_o,camlp5.pr_dump,camlp5.extend,camlp5.quotations,ostap.syntax,GT.syntax.all,GT.syntax
;    -o
;    %{targets})))

(rule
 (targets pp5+gt+plugins+ostap+dump.byte)
 (deps
  (package GT))
 (action
  (run
   mkcamlp5
   -package
   camlp5,camlp5.pa_o,camlp5.pr_o,ostap.syntax,GT.syntax.all,GT.syntax
   -o
   %{targets})))

(rule
 (targets pp5+gt+plugins+ocanren+dump.byte)
 (deps
  (package GT))
 (action
  (run
   mkcamlp5
   -package
   camlp5,camlp5.pa_o,camlp5.pr_o,GT.syntax.all,GT.syntax,OCanren.syntax
   -o
   %{targets})))

(cram
 (deps ./Driver.exe))
