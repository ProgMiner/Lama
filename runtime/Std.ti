assert : forall 1, 2. => (1, String) -> 2 ;
getEnv : forall. => (String) -> String ;
system : forall. => (String) -> Int ;
sysargs : [String] ;
stdout : file ;
stderr : file ;
stringInt : forall. => (String) -> Int ;
makeArray : forall 3. => (Int) -> [3] ;
string : forall 4. => (4) -> String ;
length : forall 5. Match(5, #box) => (5) -> Int ;
clone : forall 6. => (6) -> 6 ;
hash : forall 7. => (7) -> Int ;
readLine : forall. => () -> String ;
stringcat : forall. => (mu 8. cons (String, 8)) -> String ;
matchSubString : forall. => (String, String, Int) -> Int ;
substring : forall. => (String, Int, Int) -> String ;
regexp : forall. => (String) -> regex ;
regexpMatch : forall. => (regex, String, Int) -> Int ;
sprintf : forall. => (String) -> String ;
makeString : forall. => (Int) -> String ;
printf : forall 9. => (String) -> 9 ;
fopen : forall. => (String, String) -> file ;
fclose : forall 10. => (file) -> 10 ;
fread : forall. => (String) -> String ;
fwrite : forall 11. => (String, String) -> 11;
fexists : forall. => (String) -> Int ;
failure : forall 12. => (String) -> 12 ;
read : forall. => () -> Int ;
write : forall 13. => (Int) -> 13 ;
compare : forall 14, 15. => (14, 15) -> Int ;
i__Infix_4343 : forall. => (String, String) -> String ;
random : forall. => (Int) -> Int ;
time : forall. => () -> Int ;
kindOf : forall 16. => (16) -> Int ;
compareTags : forall 17, 18. Match(17, #sexp), Match(18, #sexp) => (17, 18) -> Int ;
flatCompare : forall 19, 20. => (19, 20) -> Int ;
tagHash : forall. => (String) -> Int ;
uppercase : forall. => (Int) -> Int ;
lowercase : forall. => (Int) -> Int ;
